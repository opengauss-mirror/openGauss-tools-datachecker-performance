<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.opengauss.datachecker.extract.data.mapper.MysqlMetaDataMapper">
    <resultMap id="tableMetadataMap" type="org.opengauss.datachecker.common.entry.extract.TableMetadata">
        <id property="tableName" column="tableName"/>
        <result property="schema" column="tableSchema"/>
        <result property="tableRows" column="tableRows"/>
        <result property="avgRowLength" column="avgRowLength"/>
    </resultMap>
    <resultMap id="columnMetadataMap" type="org.opengauss.datachecker.common.entry.extract.ColumnsMetaData">
        <id property="tableName" column="tableName"/>
        <result property="schema" column="tableSchema"/>
        <result property="columnName" column="columnName"/>
        <result property="ordinalPosition" column="ordinalPosition"/>
        <result property="dataType" column="dataType"/>
        <result property="columnType" column="columnType"/>
        <result property="columnKey" column="columnKey" javaType="org.opengauss.datachecker.common.entry.enums.ColumnKey"
                typeHandler="org.opengauss.datachecker.extract.data.mapper.handler.EnumKeyTypeHandler"/>
        <result property="extra" column="extra"/>
    </resultMap>

    <resultMap id="primaryColumnBeanMap" type="org.opengauss.datachecker.common.entry.extract.PrimaryColumnBean">
        <id property="tableName" column="tableName"/>
        <result property="columnName" column="columnName"/>
    </resultMap>

    <select id="health" resultType="boolean">
         SELECT 1 FROM DUAL
    </select>

    <select id="queryTableNameList" resultType="string">
       SELECT info.table_name tableName
       FROM
             (SELECT distinct SHA2(TABLE_NAME,224) id, TABLE_NAME FROM information_schema.KEY_COLUMN_USAGE  WHERE
             TABLE_SCHEMA=#{schema} AND CONSTRAINT_NAME='PRIMARY'
             ) pk LEFT JOIN ( select SHA2(TABLE_NAME,224) id, TABLE_NAME,TABLE_ROWS,avg_row_length from
             information_schema.tables
             WHERE  table_schema=#{schema} ) info ON pk.id=info.id AND pk.TABLE_NAME=info.TABLE_NAME
             ORDER BY info.table_rows ASC
    </select>

    <select id="queryTableMetadataList" resultMap="tableMetadataMap">
        SELECT info.tableSchema,info.table_name tableName,info.table_rows tableRows , info.avg_row_length avgRowLength,pk.id rowId
        FROM
             ( SELECT distinct SHA2(TABLE_NAME,224) id, TABLE_NAME
               FROM information_schema.KEY_COLUMN_USAGE  WHERE TABLE_SCHEMA=#{schema} AND CONSTRAINT_NAME='PRIMARY'
             ) pk
              LEFT JOIN ( select SHA2(TABLE_NAME,224) id,table_schema tableSchema, TABLE_NAME,TABLE_ROWS,avg_row_length
                          from information_schema.tables WHERE  table_schema=#{schema}
                        ) info
              ON pk.id=info.id AND pk.TABLE_NAME=info.TABLE_NAME
        ORDER BY info.table_rows ASC
    </select>

    <select id="queryTableMetadata" resultMap="tableMetadataMap">
        SELECT info.tableSchema,info.table_name tableName,info.table_rows tableRows , info.avg_row_length avgRowLength,pk.id rowId
        FROM
             ( SELECT distinct SHA2(TABLE_NAME,224) id, TABLE_NAME
               FROM information_schema.KEY_COLUMN_USAGE  WHERE TABLE_SCHEMA=#{schema} and TABLE_NAME=#{name} AND CONSTRAINT_NAME='PRIMARY'
             ) pk
              LEFT JOIN ( select SHA2(TABLE_NAME,224) id,table_schema tableSchema, TABLE_NAME,TABLE_ROWS,avg_row_length
                          from information_schema.tables WHERE  table_schema=#{schema} and TABLE_NAME=#{name}
                        ) info
              ON pk.id=info.id AND pk.TABLE_NAME=info.TABLE_NAME
    </select>

    <select id="queryTableColumnsMetaData" resultMap="columnMetadataMap">
        select table_name tableName ,lower(column_name) columnName, ordinal_position ordinalPosition, data_type dataType,
            column_type columnType,column_key columnKey, extra extra
        from information_schema.columns
        where table_schema=#{schema} and table_name =#{name} order by ordinal_position asc
    </select>

    <select id="queryTablePrimaryColumns" resultMap="primaryColumnBeanMap">
         select table_name tableName ,lower(column_name) columnName
        from information_schema.columns
        where table_schema=#{schema} and column_key='PRI' order by ordinal_position asc
    </select>

    <select id="queryTablePrimaryColumnsByTableName" resultMap="primaryColumnBeanMap">
        select table_name tableName ,lower(column_name) columnName
        from information_schema.columns
        where table_schema=#{schema} and table_name =#{name} and column_key='PRI' order by ordinal_position asc
    </select>
    <select id="rowCount" resultType="long">
        select count(1) from ${schema}.${name};
    </select>

    <select id="min" resultType="string">
         select min(${param.colName}) from ${param.schema}.${param.name}
    </select>

    <select id="max" resultType="string">
         select max(${param.colName}) from ${param.schema}.${param.name}
    </select>

    <select id="next" resultType="string">
         select ${param.colName} from ${param.schema}.${param.name} where ${param.colName} >= #{param.preValue} order by ${param.colName} asc limit #{param.offset} ,1
    </select>

    <select id="queryPointList" resultType="string">
        select s.${param.colName}
        from (
                 SELECT @rowno:=@rowno+1 as rn,r.${param.colName}
                 from ${param.schema}.${param.name} r, (select @rowno := 0) t
                 ORDER BY r.${param.colName} asc
             ) s
        where mod(s.rn, #{param.offset}) = 0
    </select>
</mapper>