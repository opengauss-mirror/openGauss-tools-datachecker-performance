<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.opengauss.datachecker.extract.data.mapper.OracleMetaDataMapper">
    <resultMap id="tableMetadataMap" type="org.opengauss.datachecker.common.entry.extract.TableMetadata">
        <id property="tableName" column="table_name"/>
        <result property="schema" column="schema"/>
        <result property="tableRows" column="numRows"/>
        <result property="avgRowLength" column="avgRowLen"/>
    </resultMap>
    <resultMap id="columnMetadataMap" type="org.opengauss.datachecker.common.entry.extract.ColumnsMetaData">
        <id property="tableName" column="table_name"/>
        <result property="schema" column="schema"/>
        <result property="columnName" column="name"/>
        <result property="ordinalPosition" column="column_id"/>
        <result property="dataType" column="data_type"/>
        <result property="columnType" column="data_type"/>
        <result property="columnKey" column="constraint_type" javaType="org.opengauss.datachecker.common.entry.enums.ColumnKey"
                typeHandler="org.opengauss.datachecker.extract.data.mapper.handler.EnumKeyTypeHandler"/>
        <result property="extra" column="extra"/>
    </resultMap>

    <select id="health" resultType="boolean">
         SELECT 1 FROM DUAL
    </select>

    <select id="queryTableNameList" resultType="string">
       SELECT TABLE_NAME FROM ALL_TABLES WHERE OWNER = #{schema}
    </select>

    <select id="queryTableMetadataList" resultMap="tableMetadataMap">
        SELECT t.owner as schema, t.table_name, t.num_rows numRows, avg_row_len avgRowLen
        FROM ALL_TABLES t LEFT JOIN (SELECT DISTINCT table_name from ALL_CONSTRAINTS where OWNER = #{schema} AND constraint_type='P') pc on t.table_name=pc.table_name
        WHERE t.OWNER = #{schema} order by numRows asc
    </select>

    <select id="queryTableMetadata" resultMap="tableMetadataMap">
         SELECT DISTINCT t.owner as schema, t.table_name, nvl(num_rows,0) tableRows, nvl(avg_row_len,0) avgRowLength
         FROM ALL_TABLES t LEFT JOIN ALL_CONSTRAINTS c on c.constraint_type = 'P' and c.owner=t.owner and t.table_name=c.table_name
         WHERE t.OWNER = #{schema} and t.table_name = #{name}
    </select>

    <select id="queryTableColumnsMetaData" resultMap="columnMetadataMap">
       select c.owner as schema, c.table_name, c.column_name as name, c.data_type, c.data_length,
         c.data_precision, c.data_scale, c.nullable, c.column_id,CASE pc.constraint_type WHEN 'P' THEN 'PRI' ELSE pc.constraint_type END AS constraint_type
        from all_tab_columns c
        left join (
                    SELECT A.COLUMN_NAME,B.constraint_type FROM ALL_CONS_COLUMNS A,ALL_CONSTRAINTS B
                    WHERE A.constraint_name = B.constraint_name AND  B.constraint_type = 'P'
                         AND A.OWNER = #{schema} AND A.table_name =#{name}
                 ) pc on c.column_name=pc.column_name
        WHERE c.OWNER =  #{schema}  and c.table_name= #{name} order by c.column_id asc
    </select>

    <select id="rowCount" resultType="long">
        select count(1) from ${schema}.${name}
    </select>

    <select id="min" resultType="string">
         select min(${param.colName}) from ${param.schema}.${param.name}
    </select>

    <select id="max" resultType="string">
         select max(${param.colName}) from ${param.schema}.${param.name}
    </select>

    <select id="next" resultType="string">
         select ${param.colName} from ${param.schema}.${param.name} where ${param.colName} >= #{param.preValue} order by ${param.colName} asc limit #{param.offset} ,1
    </select>

    <select id="queryPointList" resultType="string">
        select * from (
             select rownum rn ,${param.colName} from ${param.schema}.${param.name}  order by ${param.colName} asc
        ) where mod(rn,#{param.offset})=0
    </select>
</mapper>